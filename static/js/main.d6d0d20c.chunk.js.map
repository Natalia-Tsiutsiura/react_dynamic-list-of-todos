{"version":3,"sources":["components/Enum/ListAction.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["ListAction","TodoList","searchTodos","activeTodo","selectTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","setFilter","setApplyQuery","applyQuery","onChange","event","target","value","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","length","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","handleCloseTodo","useState","loadingList","setLoadingList","user","setUser","useEffect","userId","catch","Error","finally","href","email","name","App","todos","setTodos","setActiveTodo","filter","loading","setLoading","useMemo","filteredTodos","searchQuery","trim","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6d0d20c.chunk.js","sourcesContent":["export enum ListAction {\n  ALL = 'All',\n  ACTIVE = 'Active',\n  COMPLETED = 'Completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  searchTodos: Todo[];\n  activeTodo: Todo | null;\n  selectTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  searchTodos,\n  activeTodo,\n  selectTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {searchTodos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': todo.id === activeTodo?.id,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                {todo.completed && (\n                  <i className=\"fas fa-check\" />\n                )}\n              </span>\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames(\n                  { 'has-text-danger': !todo.completed },\n                  { 'has-text-success': todo.completed },\n                )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => selectTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classNames('far', {\n                      'fa-eye': todo.id !== activeTodo?.id,\n                      'fa-eye-slash': todo.id === activeTodo?.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { ListAction } from '../Enum/ListAction';\n\ntype Props = {\n  setFilter: (filter: ListAction) => void;\n  setApplyQuery: (query: string) => void;\n  applyQuery: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilter,\n  setApplyQuery,\n  applyQuery,\n}) => {\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setApplyQuery(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => {\n              setFilter(event.target.value as ListAction);\n            }}\n          >\n            <option value={ListAction.ALL}>All</option>\n            <option value={ListAction.ACTIVE}>Active</option>\n            <option value={ListAction.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={applyQuery}\n          onChange={handleQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n\n          {applyQuery.length > 0 && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setApplyQuery('')}\n            />\n          )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  activeTodo: Todo;\n  handleCloseTodo: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ activeTodo, handleCloseTodo }) => {\n  const [loadingList, setLoadingList] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(activeTodo.userId)\n      .then((setUser))\n      .catch(() => {\n        throw new Error('Something Went Wrong. Try Again');\n      })\n      .finally(() => setLoadingList(false));\n  }, [activeTodo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loadingList ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${activeTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {activeTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {activeTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, {\n  useEffect, useMemo, useState,\n} from 'react';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { ListAction } from './components/Enum/ListAction';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [activeTodo, setActiveTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState<ListAction>(ListAction.ALL);\n  const [applyQuery, setApplyQuery] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getTodos()\n      .then((setTodos))\n      .catch(() => {\n        throw new Error('Something Went Wrong. Try Again');\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  const searchTodos = useMemo(() => {\n    let filteredTodos = [...todos];\n    const searchQuery = applyQuery.trim().toLowerCase();\n\n    if (searchQuery) {\n      filteredTodos = filteredTodos.filter(\n        todo => todo.title.toLowerCase().includes(searchQuery),\n      );\n    }\n\n    switch (filter) {\n      case ListAction.ACTIVE:\n        return filteredTodos.filter(todo => !todo.completed);\n      case ListAction.COMPLETED:\n        return filteredTodos.filter(todo => todo.completed);\n      case ListAction.ALL:\n      default:\n        return filteredTodos;\n    }\n  }, [applyQuery, filter, todos]);\n\n  const selectTodo = (todo: Todo) => {\n    setActiveTodo(todo);\n  };\n\n  const handleCloseTodo = () => {\n    setActiveTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilter={setFilter}\n                setApplyQuery={setApplyQuery}\n                applyQuery={applyQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  searchTodos={searchTodos}\n                  activeTodo={activeTodo}\n                  selectTodo={selectTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {activeTodo && (\n        <TodoModal\n          activeTodo={activeTodo}\n          handleCloseTodo={handleCloseTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}